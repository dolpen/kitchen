#!/bin/bash
# /etc/init.d/minecraft
# version 0.5.0 2016-09-21 (YYYY-MM-DD)
#
### BEGIN INIT INFO
# Provides:   minecraft
# Required-Start: $local_fs $remote_fs screen-cleanup
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Minecraft server
# Description:    Starts the minecraft server
### END INIT INFO

#Settings
SERVICE='minecraft_server.jar'
OPTIONS='nogui'
USERNAME='minecraft'
WORLD='world'
MCPATH='/opt/minecraft'
BACKUPPATH='/opt/minecraft/backup'
MAXHEAP=<%= node['minecraft']['memory'] %>
MINHEAP=<%= node['minecraft']['memory'] %>
HISTORY=256
CPU_COUNT=<%= node['cpu']['total'] %>
#INVOCATION="java -Xmx${MAXHEAP}M -Xms${MINHEAP}M -XX:+UseConcMarkSweepGC \
#-XX:+CMSIncrementalPacing -XX:ParallelGCThreads=$CPU_COUNT -XX:+AggressiveOpts \
#-jar $SERVICE $OPTIONS"
# note : option "-Xnoclassgc" will KILL ANY SERVER PROCCESSES.
INVOCATION="java -d64 -server \
-Xmx${MAXHEAP}M -Xms${MINHEAP}M -XX:+UseG1GC \
-XX:+AggressiveOpts -XX:+DisableExplicitGC -XX:+UseLargePages -XX:+UseTLAB -Djava.net.preferIPv4Stack=true \
-jar $SERVICE $OPTIONS"

DROPBOX_PATH=/backup/minecraft/<%= node['minecraft']['id'] %>-latest.tar.gz

ME=`whoami`

as_user() {
    if [ "$ME" = "$USERNAME" ] ; then
        bash -c "$1"
    else
        su - "$USERNAME" -c "$1"
    fi
}

mc_start() {
    if pgrep -u $USERNAME -f $SERVICE > /dev/null
    then
        echo "$SERVICE は既に起動しています"
    else
        echo "$SERVICE を起動しています"
        cd $MCPATH
        as_user "cd $MCPATH && screen -h $HISTORY -dmS minecraft $INVOCATION"
        sleep 7
        if pgrep -u $USERNAME -f $SERVICE > /dev/null
        then
            echo "$SERVICE が起動しました"
        else
            echo "$SERVICE の起動に失敗しました"
        fi
    fi
}

mc_saveoff() {
    if pgrep -u $USERNAME -f $SERVICE > /dev/null
    then
        echo "$SERVICE が起動中です。オートセーブを一時無効化します"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"say バックアップを実施します。\"\015'"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-off\"\015'"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-all\"\015'"
        sync
        sleep 10
     else
        echo "$SERVICE は停止中です"
    fi
}

mc_saveon() {
    if pgrep -u $USERNAME -f $SERVICE > /dev/null
    then
        echo "$SERVICE が起動中です。オートセーブ有効化します"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-on\"\015'"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"say バックアップ完了。オートセーブを有効にします。\"\015'"
    else
        echo "$SERVICE は停止中です"
    fi
}

mc_stop() {
    if pgrep -u $USERNAME -f $SERVICE > /dev/null
    then
        echo "$SERVICE を停止します"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"say サーバーを停止します。全体セーブ中。。。\"\015'"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-all\"\015'"
        sleep 10
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"stop\"\015'"
        sleep 15
    else
        echo "$SERVICE は停止中です"
    fi
    if pgrep -u $USERNAME -f $SERVICE > /dev/null
    then
        echo "$SERVICE の停止操作に失敗しました(時間がかかっているだけかもしれません)"
    else
        echo "$SERVICE が停止しました"
    fi
}

mc_backup() {
    mc_saveoff
    NOW=`date "+%Y-%m-%d_%Hh%M"`
    BACKUP_FILE="$BACKUPPATH/${WORLD}_${NOW}.tar"
    echo "ワールドデータのバックアップ中です"
    #as_user "cd $MCPATH && cp -r $WORLD $BACKUPPATH/${WORLD}_`date "+%Y.%m.%d_%H.%M"`"
    as_user "tar -C \"$MCPATH\" -cf \"$BACKUP_FILE\" $WORLD"
    as_user "tar -C \"$MCPATH\" -rf \"$BACKUP_FILE\" $WORLD_nether"
    as_user "tar -C \"$MCPATH\" -rf \"$BACKUP_FILE\" $WORLD_the_end"
    echo "バイナリのバックアップ中です"
    as_user "tar -C \"$MCPATH\" -rf \"$BACKUP_FILE\" $SERVICE"
    #as_user "cp \"$MCPATH/$SERVICE\" \"$BACKUPPATH/minecraft_server_${NOW}.jar\""
    mc_saveon
    echo "圧縮中"
    as_user "gzip -f \"$BACKUP_FILE\""
    as_user "chmod 777 \"$BACKUP_FILE\""
    echo "Dropboxへアップロード中"
    curl -X POST https://content.dropboxapi.com/2/files/upload --header "Authorization: Bearer <%= @secret %>" --header "Dropbox-API-Arg: {\"path\": \"$DROPBOX_PATH\",\"mode\": \"overwrite\",\"mute\": false}" --header "Content-Type: application/octet-stream" --data-binary @$BACKUP_FILE.gz >/dev/null 2>&1
    echo "バックアップが終了しました"
}

mc_command() {
    command="$1";
    if pgrep -u $USERNAME -f $SERVICE > /dev/null
    then
        pre_log_len=`wc -l "$MCPATH/logs/latest.log" | awk '{print $1}'`
        echo "$SERVICE サーバーは起動中です。コマンドを実行します"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"$command\"\015'"
        # かなり雑。一瞬スリープして latest.log の末尾見ているだけなので、場合によっては流れてしまうかも
        sleep .1
        tail -n $[`wc -l "$MCPATH/logs/latest.log" | awk '{print $1}'`-$pre_log_len] "$MCPATH/logs/latest.log"
    fi
}

mc_chatlog() {
    CHATLOG_FILE="`date +%Y%m%d -d '-1 day'`.txt"
    as_user "find $MCPATH/logs -type f -daystart -mtime '0' -name '*.log.gz' | sort -n | tr '\n' '\0' | xargs -0 zcat | grep '^\[[0-9:]*\]\s\[Server thread\/INFO\]:\s<' | sed -e 's/\[Server\sthread\/INFO\]:\s//g' > $MCPATH/chat/$CHATLOG_FILE"
    as_user "find $MCPATH/chat/$CHATLOG_FILE -empty | xargs rm"
}

#Start-Stop here
case "$1" in
start)
    mc_start
;;
stop)
    mc_stop
;;
restart)
    mc_stop
    mc_start
;;
backup)
    mc_backup
;;
status)
    if pgrep -u $USERNAME -f $SERVICE > /dev/null
    then
        echo "$SERVICE は起動中です"
    else
        echo "$SERVICE は停止中です"
    fi
;;
command)
    if [ $# -gt 1 ]; then
        shift
        mc_command "$*"
    else
        echo "Must specify server command (try 'help'?)"
    fi
;;
chatlog)
    mc_chatlog
;;
*)
    echo "Usage: $0 {start|stop|update|backup|status|restart|chatlog|command \"server command\"}"
    exit 1
;;
esac

exit 0
